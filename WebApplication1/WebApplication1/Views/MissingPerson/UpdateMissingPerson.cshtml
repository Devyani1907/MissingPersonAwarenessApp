@model WebApplication1.Models.MissingPersonModel

@{
    ViewBag.Title = "UpdateMissingPerson";
}



<link href="~/Content/CSS/animate.min.css" rel="stylesheet" />
<link href="~/Content/CSS/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/CSS/font-awesome.min.css" rel="stylesheet" />
<link href="~/Content/CSS/main.css" rel="stylesheet" />
<link href="~/Content/CSS/owl.carousel.css" rel="stylesheet" />
<link href="~/Content/CSS/responsive.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" rel="stylesheet" />


<section id="hero-area">
    <img class="img-responsive" src="~/Image/header1.png" alt="">
</section>

<div class="container body-content">
    <nav id="navigation">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="block">
                        <nav class="navbar navbar-default">
                            <div class="container-fluid">
                                <!-- Brand and toggle get grouped for better mobile display -->
                                <div class="navbar-header">
                                    <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                                        <span class="sr-only">Toggle navigation</span>
                                        <span class="icon-bar"></span>
                                        <span class="icon-bar"></span>
                                        <span class="icon-bar"></span>
                                    </button>
                                    @*<a class="navbar-brand" href="#">
                                            <img src="~/Image/logo.png" alt="Logo">
                                        </a>*@

                                </div>

                                <!-- Collect the nav links, forms, and other content for toggling -->
                                <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                                    <ul class="nav navbar-nav navbar-right" id="top-nav">
                                        <li id="homepage"><a href="">Home</a></li>
                                        <li id="aboutuspage"><a href="">About us</a></li>
                                        <li id="blogpage"><a href="">Blog</a></li>
                                        <li id="contactpage"><a href="">Contacts</a></li>
                                        @*@{
                                            if (@ViewData["IsAdmin"].ToString() == "Yes")
                                            {*@
                                        <li id="missingpersonpage"><a href="/">Manage Missing Person</a></li>
                                        @*}
                                            }*@
                                    </ul>
                                </div><!-- /.navbar-collapse -->
                            </div><!-- /.container-fluid -->
                        </nav>
                    </div>
                </div><!-- .col-md-12 close -->
            </div><!-- .row close -->
        </div><!-- .container close -->
    </nav><!-- header close -->
    <!--Header end-->
    <div>
        <button type="button" class="btn btn-info m-2" style="float: right;"  onclick="MissingPersonListPage()">Back to List</button>
        @*@Html.ActionLink("Back to List", "ManageMissingPerson")*@
    </div>
    <div class="col-md-9" style="padding-left: 330px">
        <div class="bg-light rounded h-100 p-4">
            @using (Html.BeginForm("UpdateMissingPerson", "MissingPerson", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                {
                    @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Update Missing Person</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @*<label class="control-label col-md-2">First Name</label>*@
                    <div class="col-md-4" style="padding-left: 71px;">@Html.LabelFor(model => model.FirstName, "First Name")</div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4" style="padding-left: 71px;">
                        @Html.LabelFor(model => model.LastName, "Family Name")
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4" style="padding-left: 71px;">
                        @Html.LabelFor(model => model.DateOfBirth, "Date Of Birth")
                    </div>
                    <div class="col-md-8">
                        <input type="date" name="DateOfBirth" id="DateOfBirth" class="form-control" placeholder="dd-MM-yyyy" />
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4" style="padding-left: 71px;">
                        @Html.LabelFor(model => model.Address, "Address")
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4" style="padding-left: 71px;">
                        @Html.LabelFor(model => model.FatherName, "Father Name")
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4" style="padding-left: 71px;">
                        @Html.LabelFor(model => model.MotherName, "Mother Name")
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4" style="padding-left: 71px;">
                        @Html.LabelFor(model => model.SpouseName, "Spouse Name")
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.SpouseName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SpouseName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4" style="padding-left: 71px;">
                        @Html.LabelFor(model => model.File, "Choose Image")
                    </div>
                    <div class="col-md-8">
                        <input type="file" name="File" id="missingPersonImage"/>
                        @*@Html.TextBox("File", "", new { type = "file" })*@
                        @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4" style="padding-left: 71px;">
                        @Html.LabelFor(model => model.MissingDate, "Missing Date")
                    </div>
                    <div class="col-md-8">
                        <input type="date" name="MissingDate" id="MissingDate"  class="form-control" placeholder="dd-MM-yyyy" />
                        @Html.ValidationMessageFor(model => model.MissingDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <input type="hidden" name="Id" id="missingPersonId" class="form-control" hidden/>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10" style="padding-left: 169px;">
                        <input type="submit" value="Update" class="btn btn-info" style="" />
                    </div>
                </div>
            </div>
                }
            }
        </div>
    </div>

    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>

    <script>

        $(document).ready(function () {
            debugger;

            let id = @Html.Raw(Json.Encode(ViewData["Id"]));

            if (id > 0)
            {
                $.ajax({
                    url: window.location.origin + "/MissingPerson/GetMissingPersonDetailById?id=" + id,
                    success: function (result) {
                        debugger;
                        $("#missingPersonId").val(result.data.Id);
                        $("#FirstName").val(result.data.FirstName);
                        $("#LastName").val(result.data.LastName);
                        $("#DateOfBirth").val(CalculateDate(result.data.DateOfBirth));
                        $("#Address").val(result.data.Address);
                        $("#FatherName").val(result.data.FatherName);
                        $("#MotherName").val(result.data.MotherName);
                        $("#SpouseName").val(result.data.SpouseName);
                        $("#missingPersonImage").val(result.data.ImageName);
                        $("#MissingDate").val(CalculateDate(result.data.MissingDate));
                    }
                });
            }



        });

        function CalculateDate(date) {
            var pattern = /Date\(([^)]+)\)/;
            var results = pattern.exec(date);
            var date = new Date(parseFloat(results[1]))
            var month = date.getMonth() + 1;
            var day = date.getDate();
            //return (day > 9 ? day : "0" + day) + "-" + (month > 9 ? month : "0" + month) + "-" + date.getFullYear();
            return date.getFullYear() + "-" + (month > 9 ? month : "0" + month) + "-" + (day > 9 ? day : "0" + day) ;
        }

        function MissingPersonListPage() {
                window.location.href = window.location.origin + "/MissingPerson/ManageMissingPerson";
        }
    </script>



